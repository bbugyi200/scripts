#!/usr/bin/env python3

"""Stores and Retrieves Default Directories for tmuxinator Sessions"""

import os
import pickle
import sys
import typing as Type  # pylint: disable=unused-import

import bugyi
from bugyi import cli
from bugyi.core import catch
from loguru import logger as log


@catch
def main():
    parser = cli.ArgumentParser()
    exgroup = parser.add_mutually_exclusive_group()
    exgroup.add_argument(
        '--get',
        action='store_true',
        help='Print the root directory of the tmux session to stdout.',
    )
    exgroup.add_argument(
        '--put',
        action='store_true',
        help='Map SESSION to ROOT_DIR in the database.',
    )
    parser.add_argument(
        'session_name',
        metavar='SESSION',
        type=str,
        help='The name of the tmux session.',
    )
    parser.add_argument(
        'root_dir',
        metavar='ROOT_DIR',
        type=str,
        nargs='?',
        help='The name of the directory to be mapped to the tmux session.',
    )
    args = parser.parse_args()

    bugyi.logging.configure(__file__, debug=args.debug, verbose=args.verbose)

    fpath = '{}/default-dirs.pickle'.format(bugyi.xdg.init('data'))

    default_dirs: Type.Dict[str, str] = {}
    if not os.path.isfile(fpath):
        with open(fpath, 'wb+') as f:
            pickle.dump(default_dirs, f)
    else:
        with open(fpath, 'rb') as f:
            default_dirs = pickle.load(f)

    if args.get:
        _home = os.environ.get('HOME')
        _root_dir = default_dirs.get(args.session_name, _home)
        print(_root_dir.replace('/home/bryan', _home), end='')  # type: ignore
    elif args.put:
        default_dirs[args.session_name] = args.root_dir
        with open(fpath, 'wb') as f:
            pickle.dump(default_dirs, f)


if __name__ == "__main__":
    main()
