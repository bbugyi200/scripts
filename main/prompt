#!/usr/bin/env python

"""Wrapper for rofi that implements my version of a good input prompt."""

import argparse
import subprocess as sp  # noqa: F401

import gutils

############################################################################################
#  gutils library: https://github.com/bbugyi200/pylibs/tree/master/gutils                  #
############################################################################################

log = gutils.logging.getEasyLogger(__name__)


def main():
    log.debug('Extra Rofi Options: {}'.format(args.opts))

    cmd_list = ['rofi']

    opts = []
    opts.extend(['-m', '-4'])
    opts.extend(['-lines', '0'])
    opts.extend(['-p', args.prompt])
    opts.extend(['-location', '6'])
    opts.extend(['-theme', 'Pop-Dark.rasi'])
    opts.extend(['-dmenu'])
    opts.extend(args.opts)

    cmd_list.extend(opts)
    log.debug('Prompt Command List: {}'.format(cmd_list))

    sp.check_call(cmd_list)


if __name__ == "__main__":
    parser = gutils.ArgumentParser()
    parser.add_argument('prompt', nargs='?', default='', help='prompt to use for rofi window')
    parser.add_argument('opts', nargs=argparse.REMAINDER, help='additional arguments to be passed to rofi')
    args = parser.parse_args()

    with gutils.logging.context(log, debug=args.debug, verbose=args.verbose):
        main()
