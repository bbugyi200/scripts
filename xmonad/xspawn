#!/bin/bash

read -r -d '' doc << EOM
Wraps an arbitrary application executable by creating a new XMonad workspace
and shifting the corresponding application window to that workspace.
EOM

# ---------- Modules ----------
source gutils.sh

# ---------- Command-line Arguments ----------
export USAGE_GRAMMAR=(
    "[-d] [-v] [-w WORKSPACE_NAME] COMMAND [ARG [ARG [...]]]"
    "-h"
)

# shellcheck disable=SC2154
read -r -d '' help << EOM
$(usage)

${doc}

Optional Arguments:
    -d | --debug
        Enable debug mode.

    -h | --help
        View this help message.

    -v | --verbose
        Enable verbose output.

    -w | --workspace-name
        The name of the new XMonad workspace to create. Defaults to the name
        of the COMMAND.
EOM

if [[ "$1" == "-"* ]]; then
    eval set -- "$(getopt -o "d,h,v,w:" -l "debug,help,verbose,workspace-name:" -- "$@")"

    while [[ -n "$1" ]]; do
        case $1 in
           -d|--debug )
               debug=true
               ;;
           -h|--help )
               echo "${help}"
               exit 0
               ;;
           -v|--verbose )
               verbose=true
               ;;
           -w|--workspace-name )
               shift
               workspace_name="$1"
               ;;
           -- )
               shift
               break
               ;;
        esac
        shift
    done
fi

if [[ "${debug}" = true && "${verbose}" = true ]]; then
    PS4='$LINENO: '
    set -x
fi

# ---------- Main ----------
full_cmd="$*"
if [[ -z "${workspace_name}" ]]; then
    if [[ "$1" != "sudo" ]]; then
        workspace_name="$1"
    else
        for _ in {0..4}; do
            shift
            if [[ "$1" != "-"* ]]; then
                workspace_name="$1"
                break
            fi
        done
    fi
fi

printf "${workspace_name}" > /tmp/xmonad.workspace

xdotool key alt+super+shift+n
${full_cmd} &> /dev/null & disown
