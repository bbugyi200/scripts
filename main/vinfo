#!/bin/bash

read -r -d '' doc << EOM
Vim Utility for Reading Info Manuals
EOM

# ---------- Modules ----------
source gutils.sh

# ---------- Command-line Arguments ----------
eval set -- "$(getopt -o "d,h,v" -l "debug,help,verbose" -- "$@")"

export USAGE_GRAMMAR=(
    "[-d] [-v] FILE [NODE]"
    "-h"
)

# shellcheck disable=SC2154
read -r -d '' help << EOM
$(usage)

${doc}

Positional Arguments:
    FILE    The name of the info manual. If no info file is found by this name,
            an attempt will be made to find the correct info file and navigate
            to the node matching the keyword given by FILE if possible.
    NODE    The name of a node contained in the specified info manual.

Optional Arguments:
    -d | --debug
        Enable debug mode.

    -h | --help
        View this help message.

    -v | --verbose
        Enable verbose output.
EOM

while [[ -n "$1" ]]; do
    case $1 in
       -d|--debug )
           debug=true
           ;;
       -h|--help )
           echo "${help}"
           exit 0
           ;;
       -v|--verbose )
           verbose=true
           ;;
       -- )
           shift
           break
           ;;
    esac
    shift
done

if [[ "${debug}" = true && "${verbose}" = true ]]; then
    PS4='$LINENO: '
    set -x
fi

if [[ -z "$1" ]]; then
	die "$(usage)" 2
fi

# ---------- Main ----------
main() {
	file="$(/usr/bin/info -w "$1" | awk -F'/' '{print $NF}' | awk -F'.' '{$NF=""; $(NF-1)=""; print $0}')"
	if [[ -z "${file}" ]]; then
		if man -w "$1" &> /dev/null; then
            printf "%s\n\n%s\n\n%s" \
                "Unable to find an info page for '$1'." \
                "Searching for alternative documentation..." \
                "Loading man page::   $(man -w "$1" | head -n 1 | awk -F'/' '{print $NF}' | sed 's/\.\([^\.]*\)\.bz2$/(\1)/g')  "

            num_of_bars=15
            total_delay=0.5

            delay="$(bc <<< "scale=10; ${total_delay} / ${num_of_bars}")"
            clear_line="$(mkbar '\b' $((num_of_bars + 2)))"

            for (( i = 0; i < "$((num_of_bars + 1))"; i++ )); do
                bar="[$(mkbar '=' ${i})$(mkbar ' ' $((num_of_bars - i)))]"
                printf "${bar}"

                sleep "${delay}"

                printf "${clear_line}"
            done
            printf "${bar}"

			vman "$1"
			exit 0
		fi

		die "Unable to find an info page for '$1'.\n\n===== APROPOS OUTPUT =====\n$(2>&1 apropos "$1")"
	fi

	if [[ "${file}" == "$1" ]]; then
		shift
	fi

	if [[ -n "$1" ]]; then
		node="$1"; shift
		info_args="${file} ${node}"
	else
		info_args="${file}"
	fi

	vim -c "Info ${info_args}" -c 'silent only' -c 'bd1'
}

mkbar() {
    ch="$1"; shift
    count="$1"; shift

    head -c "${count}" < /dev/zero | tr '\0' "${ch}"
}


if [[ "${SCRIPTNAME}" == "$(basename "${BASH_SOURCE[0]}")" ]]; then
	main "$@"
fi
