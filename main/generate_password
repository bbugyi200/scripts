#!/usr/bin/env python3

"""
Generate a random N character password.
"""

import random
import string
import sys
from typing import NamedTuple, Sequence

import gutils
from loguru import logger as log  # pylint: disable=unused-import


class Arguments(NamedTuple):
    debug: bool
    verbose: bool
    password_length: int
    use_uppercase: bool
    use_lowercase: bool
    use_digits: bool
    use_symbols: bool


def parse_cli_args(argv: Sequence[str]) -> Arguments:
    parser = gutils.ArgumentParser()
    parser.add_argument(
        "password_length",
        nargs="?",
        type=int,
        default=15,
        help=(
            "The length (in characters) of the password to generate. Defaults"
            " to %(default)s."
        ),
    )
    parser.add_argument(
        "-U",
        "--no-uppercase",
        dest="use_uppercase",
        action="store_false",
        help="Do NOT allow uppercase letters to be included in the password.",
    )
    parser.add_argument(
        "-L",
        "--no-lowercase",
        dest="use_lowercase",
        action="store_false",
        help="Do NOT allow lowercase letters to be included in the password.",
    )
    parser.add_argument(
        "-D",
        "--no-digits",
        dest="use_digits",
        action="store_false",
        help="Do NOT allow digits (i.e. 0-9) to be included in the password.",
    )
    parser.add_argument(
        "-S",
        "--no-symbols",
        dest="use_symbols",
        action="store_false",
        help=(
            "Do NOT allow symbols (e.g. '@', '!', '>', ...) to be included in"
            " the password."
        ),
    )

    args = parser.parse_args(argv[1:])

    if not (
        args.use_uppercase
        or args.use_lowercase
        or args.use_digits
        or args.use_symbols
    ):
        parser.error(
            "Cannot use ALL of the -U, -L, -D, and -S options, since this"
            " leaves us with no characters that we are allowed to include in"
            " our newly generated password."
        )

    return Arguments(**dict(args._get_kwargs()))


@gutils.catch
def main(argv: Sequence[str] = None) -> int:
    if argv is None:
        argv = sys.argv

    args = parse_cli_args(argv)
    gutils.logging.configure(__file__, debug=args.debug, verbose=args.verbose)

    password_chars = ""

    if args.use_uppercase:
        bad_uppercase = "O" if args.use_digits else ""
        password_chars += ''.join(
            set(string.ascii_uppercase) - set(bad_uppercase)
        )

    if args.use_lowercase:
        password_chars += string.ascii_lowercase

    if args.use_digits:
        password_chars += string.digits

    if args.use_symbols:
        bad_symbols = ''.join(["\\", '"', "'", "`"])
        password_chars += ''.join(set(string.punctuation) - set(bad_symbols))

    log.debug(
        f"Number of password characters to choose from:  {len(password_chars)}"
    )
    log.debug(
        "Number of possible passwords:"
        f" {len(password_chars)}^{args.password_length} =="
        f" {len(password_chars) ** args.password_length:.2e}"
    )

    password = ''.join(
        random.choice(password_chars) for _ in range(args.password_length)
    )
    print(password)

    return 0


if __name__ == "__main__":
    sys.exit(main())
