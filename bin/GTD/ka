#!/usr/bin/env python

"""Add event to khal using more flexible date format."""

import datetime as dt
import subprocess as sp  # noqa: F401

from dateutil.parser import parse
import gutils

############################################################################################
#  gutils library: https://github.com/bbugyi200/scripts/tree/master/modules/python/gutils  #
############################################################################################

log = gutils.logging.getEasyLogger(__name__)


def main():
    if 'at' in args.date:
        start = parse(args.date)
        end = start + dt.timedelta(hours=1)
        add_khal_event(args.event_name, start.strftime('%Y-%m-%dT%H:%M'), end.strftime('%Y-%m-%dT%H:%M'))
    else:
        date = parse(args.date)
        add_khal_event(args.event_name, date.strftime('%Y-%m-%d'))


def add_khal_event(event_name, *dates):
    try:
        assert len(dates) <= 2, "{} should only have at MOST two elements.".format(dates)
    except AssertionError as e:
        raise ValueError(str(e))

    cmd_list = ['khal', 'new', '-a', 'home']
    cmd_list.extend([*dates])
    cmd_list.extend([event_name])

    sp.check_call(cmd_list)


if __name__ == "__main__":
    parser = gutils.ArgumentParser()
    parser.add_argument('date', help='Date of khal event.')
    parser.add_argument('event_name', help='Name of khal event.')
    args = parser.parse_args()

    with gutils.logging.context(log, debug=args.debug, verbose=args.verbose):
        main()
