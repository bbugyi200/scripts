#!/usr/bin/python3

"""Gets / Sets Root Directory of Tmux Window (based on tmuxinator config)"""

import subprocess as sp  # noqa: F401

import yaml

import gutils

############################################################################################
#  gutils library: https://github.com/bbugyi200/pylibs/tree/master/gutils                  #
############################################################################################

log = gutils.logging.getEasyLogger(__name__)


def main(args):
    mux_yaml_path = '/home/bryan/.config/tmuxinator/{}.yml'.format(args.session_name)
    all_windows = get_all_windows(mux_yaml_path, args.session_name)

    try:
        _window_dict = all_windows[args.window_index]
        window_name = next(iter(_window_dict))
        window_dict = _window_dict[window_name]
    except IndexError:
        window_dict = dict()

    if args.set is None:
        getdir(args.session_name, window_dict)
    else:
        setdir(mux_yaml_path, args.session_name, window_name, args.set)


def getdir(session_name, window_dict):
    """
    Get Root Directory for @session_name where @window_dict is a dictionary of configurations
    set under the desired windows heading in the YAML configuration.
    """
    rootdir = get_rootdir(session_name, window_dict)
    print(rootdir, end='')


def setdir(mux_yaml_path, session_name, window_name, new_root):
    """Set the Root Directory Name for @session_name.@window_name to @new_root."""
    all_lines = []
    found = False
    for line in open(mux_yaml_path, 'r'):
        if found and line.startswith('    -'):
            found = False

        if not found or not line.startswith('        root:'):
            all_lines.append(line)

        if line.startswith('    - {}:'.format(window_name)):
            all_lines.append('        root: {}\n'.format(new_root))
            found = True

    with open(mux_yaml_path, 'w') as f:
        f.writelines(all_lines)


def get_all_windows(mux_yaml_path, session_name):
    """Returns dictionary of all windows for the given @session_name."""
    with open(mux_yaml_path) as f:
        raw_dict = yaml.safe_load(f)
    return raw_dict['windows']


def get_rootdir(session_name, window_dict):
    """Returns the final root directory path."""
    if 'root' in window_dict:
        rootdir = window_dict['root']
        return rootdir.replace('~', '/home/bryan')
    else:
        out = sp.check_output(['tm-session-root', '--get', session_name])
        return out.decode().strip()


if __name__ == "__main__":
    parser = gutils.ArgumentParser()
    parser.add_argument('session_name', help='Name of tmux session.')
    parser.add_argument('window_index', type=int, help='Index of the tmux window.')
    parser.add_argument('-s', '--set', help='Set window-specific root directory for the specified '
                                            'Tmuxinator session.')
    args = parser.parse_args()

    with gutils.logging.context(log, debug=args.debug, verbose=args.verbose):
        main(args)
