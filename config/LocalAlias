#!/bin/bash

# Allows me to have a .localaliases file in any directory that I want which
# can be used to customize shell commands locally.

shopt -s expand_aliases
source /home/bryan/Dropbox/dotfiles/.globrc


SEP="="
LOCALALIAS_FILE="./.lshrc"


eval set -- $(getopt -o "da:ef:pr:x:" -l "debug,alias:,edit,function:,print,remove:,execute:" -- "$@")

action='print'
while [[ -n "$1" ]]; do
    case $1 in
        '-d' | '--debug' )
            PS4='$LINENO: '
            set -x;;
        '-x' | '--execute' )
            action='execute'
            shift
            ARG="$1";;
        '-e' | '--edit' )
            action='edit';;
        '-f' | '--function' )
            action='function'
            shift
            ARG="$1";;
        '-p' | '--print' )
            action="print";;
        '-a' | '--alias' )
            action='alias'
            shift
            ARG="$1";;
        '-r' | '--remove' )
            action='remove'
            shift
            ARG="$1";;
        '--' )
            shift
            break;;
    esac
    shift
done


func_exists() {
    if [[ -f $LOCALALIAS_FILE ]]; then
        FUNC_EXISTS=$(cat $LOCALALIAS_FILE | grep -E "$ARG[ ]?\\(\\)")
    fi

    if [[ -n "$FUNC_EXISTS" ]]; then
        return 0
    else
        return 1
    fi
}

remove() {
    if func_exists; then
        sed -i "/$ARG ()/,/^$/d" $LOCALALIAS_FILE
    else
        sed -i "/$ARG$SEP/d" $LOCALALIAS_FILE
    fi
}

add_alias() {
    printf "$ARG$SEP''\033[1D" 
    IFS=
    read -n 1 C
    while [[ "$C" != "" ]]; do
        if [[ "$C" = "" ]]; then
            if [[ -n "$CMD" ]]; then
                CMD=${CMD::-1}
            fi
        else
            CMD="$CMD$C"
        fi

        echo -ne "\033[0K\r"
        echo -ne "\033[0K\r"  # 2nd call clears backspace character (^?)

        Q="'"
        if [[ "$CMD" == *"$Q"* ]]; then
            Q='"'
        fi

        printf "$ARG$SEP$Q$CMD$Q\033[1D" 
        read -n 1 C
    done

    printf "alias $ARG$SEP$Q$CMD$Q\n" >> $LOCALALIAS_FILE
    exit 0
}


case $action in
    'alias' )
        remove
        add_alias;;
    'function' )
        remove
        sed -i "1 i\\$ARG () {}\n" $LOCALALIAS_FILE
        vim -c "/$ARG () {\zs}\ze" -c 'normal n' +startinsert $LOCALALIAS_FILE
        exit 0;;
    'remove' )
        remove;;
    'print' )
        if [[ -f $LOCALALIAS_FILE ]]; then
            if [[ -n "$1" ]]; then
                ARG=$1; shift
                if func_exists; then
                    sed -n "/$ARG ()/,/^$/p" $LOCALALIAS_FILE | pygmentize -l zsh
                else
                    cat $LOCALALIAS_FILE | grep $ARG$SEP | pygmentize -l zsh
                fi
            else
                pygmentize -l zsh $LOCALALIAS_FILE
            fi
        else
            echo "$LOCALALIAS_FILE does not exist!"
            exit 1
        fi;;
    'edit' )
        if [[ -n "$1" ]]; then
            ARG=$1; shift
            if func_exists; then
                vim -c "/$ARG ()" -c "normal nj^" $LOCALALIAS_FILE
            else
                vim -c "/$ARG=['\"]\zs.\ze" -c "normal n" $LOCALALIAS_FILE
            fi
        else
            vim $LOCALALIAS_FILE
        fi;;
    'execute' )
        DEF=$(grep -s "alias $ARG$SEP" "$LOCALALIAS_FILE")
        CMD=${DEF/"alias $ARG$SEP"}; CMD=${CMD/#[\"\']}; CMD=${CMD/%[\"\']}

        if [ -n "$CMD" ]; then
            /bin/zsh -c "$CMD $@"
            exit 0
        elif func_exists; then
            printf "The command '$ARG' is defined locally in $LOCALALIAS_FILE as a function, but $(basename $0) is only equipped to handle aliases!"
        else
            printf "Create a new local alias for $ARG? (y/n): "
            read -n 1 CHOICE
            echo

            if [ "$CHOICE" != "y" ]; then
                exit 1
            fi

            add_alias
        fi;;
esac
