#!/usr/bin/env python

import json
import subprocess as sp
import re

history_file = '/home/bryan/.local/share/clipster/history'
MAX_LINE = 60


def truncate(clip):
    lines = clip.count('\n')
    if lines > 0:
        if len(clip[:clip.find('\n')]) > MAX_LINE:
            clip = '{}... (lines {})'.format(clip[:MAX_LINE], lines)
        else:
            clip = re.sub('\n[\s\S]*', ' ({} lines)'.format(lines), clip, count=1)
    else:
        if len(clip) > MAX_LINE:
            clip = '{}...'.format(clip[:MAX_LINE])

    return clip


raw_clipboard = json.load(open(history_file))['CLIPBOARD']

clipboard = []
for clip in raw_clipboard:
    if clip not in clipboard:
        clipboard.append(clip)

clipboard.reverse()
transformed = list(map(truncate, clipboard))

ps = sp.Popen(['printf', '{}'.format('\n'.join(transformed))], stdout=sp.PIPE)
out = sp.check_output(['rofi', '-p', 'clip', '-dmenu'], stdin=ps.stdout).decode('utf-8')[:-1]

new_clip = clipboard[transformed.index(out)].encode('utf-8')
ps = sp.Popen(['xclip', '-sel', 'clipboard'], stdin=sp.PIPE)
ps.communicate(input=new_clip)
