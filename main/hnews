#!/usr/bin/env python3

"""Hacker News Script.

Interactively select articles to open from top N Hacker News articles (sorted
by points).
"""

import argparse
import os
import subprocess as sp

from bs4 import BeautifulSoup
from loguru import logger as log  # pylint: disable=unused-import
import requests

import gutils


@gutils.catch
def main() -> None:
    args = parse_cli_args()
    gutils.logging.configure(__file__, debug=args.debug, verbose=args.verbose)

    html = requests.get('https://news.ycombinator.com/').text
    soup = BeautifulSoup(html, 'html.parser')
    storylinks = soup.find_all(attrs={'class': 'storylink'})
    scores = soup.find_all(attrs={'class': 'score'})

    N = args.N
    top_N_articles = [
        group[0]
        for group in sorted(
            zip(storylinks, scores),
            key=lambda x: -int(x[1].text.split()[0]),
        )[:N]
    ]; log.trace(f"top_N_articles = {top_N_articles}")

    keep_alive = True
    while keep_alive:
        os.system("clear")
        for i, article in enumerate(top_N_articles):
            print(f"[{i+1}]: {article.text}")

        choices = input("\n>>> ")

        urls = []
        for choice in choices.split():
            if choice == "q":
                keep_alive = False
                continue

            index = int(choice) - 1
            urls.append(top_N_articles[index].attrs["href"])

        if urls:
            sp.check_call(
                [os.environ.get("BROWSER", "qutebrowser"), *urls],
                stdout=sp.DEVNULL,
                stderr=sp.DEVNULL,
            )


def parse_cli_args() -> argparse.Namespace:
    parser = gutils.ArgumentParser()
    parser.add_argument(
        "N",
        nargs="?",
        default=10,
        type=int,
        help="The number of Hacker News articles to open.",
    )
    return parser.parse_args()


if __name__ == "__main__":
    main()
