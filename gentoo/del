#!/bin/bash

####################################################
#  Wrapper for `emerge` that Deletes a Package(s)  #
####################################################
source gutils.sh

# ---------- Command-line Arguments  ----------
eval set -- "$(getopt -o "d,D,1" -l "debug,depclean,oneshot" -- "$@")"

while [[ -n "$1" ]]; do
    case $1 in
       -d|--debug )
           PS4='$LINENO: '
           set -x;;
       -D|--depclean )
           depclean=true
           ;;
       -1|--oneshot )
           oneshot=true
           ;;
       -- )
           shift
           break;;
    esac
    shift
done

function purge_world() {
    all_sets=( "shared" "$(hostname)" )
    found=false
    for pkg in "$@"; do
        category="$(ecat "${pkg}")"
        if [[ -z "${category}" ]]; then
            emsg "Unable to determine the category for the this package:  ${pkg}"
            continue
        fi

        full_pkg="${category}"/"${pkg}"
        for set in "${all_sets[@]}"; do
            filename=/etc/portage/sets/"${set}"
            if grep "${pkg}" "${filename}" &> /dev/null; then
                pkg_pttrn="^${full_pkg}([ #].*)?$"
                if grep -q -P "${pkg_pttrn}" "${filename}"; then
                    found=true
                    imsg "Purging ${full_pkg} from @${set}."
                    perl -n -i -E "print unless m{${pkg_pttrn}}" "${filename}"
                fi
            fi
        done
    done

    if [[ "${found}" != true ]] && [[ -n "${full_pkg}" ]]; then
        wmsg "The package was not found in any @world sets:  ${full_pkg}"
    fi
}

# ---------- Main ----------
if [[ "$depclean" = true ]]; then
    OPTS=("--depclean" "--verbose")
else
    OPTS=("--unmerge")
fi

if sudo emerge --ask "${OPTS[@]}" "$@"; then
    if [[ "${oneshot}" = true ]]; then
        imsg "Using --oneshot option. Package sets will not be altered."
    else
        purge_world "$@"
    fi
        
    imsg "Calling updatedb to update its databases."
    updatedb &
else
    purge_world "$@"
    exit "$?"
fi
