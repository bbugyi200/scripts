#!/usr/bin/env python

""" Refresh window contents of the GTD tmux session """

import argparse
import subprocess as sp

mode_help = "Determines what information is refreshed. (Defaults to 'main')."
switch_help = "Switch to primary GTD window when done refreshing windows."
mode_opts = ['full', 'main', 'context']

parser = argparse.ArgumentParser(description=__doc__)
parser.add_argument('-M', '--mode', dest='mode', choices=mode_opts, default='main', help=mode_help)
parser.add_argument('-S', '--switch', dest='switch', action='store_true', help=switch_help)
args = parser.parse_args()


def tmux_cmd(cmd, window, cmd_args=None):
    """ Run Pre-formatted 'tmux <cmd>' Command """
    subprocess_command = ['tmux', '-L', 'GTD', cmd, '-t', 'GTD:{}.0'.format(window)]
    if cmd_args is not None:
        if isinstance(cmd_args, str):
            cmd_args = (cmd_args,)
        for arg in cmd_args:
            subprocess_command.append(arg)
    sp.call(subprocess_command)


def send_keys(window, keys):
    """ Run Pre-formatted 'tmux send-keys' Command """
    tmux_cmd('send-keys', window, (keys, 'Enter'))


if args.mode in ['full', 'context']:
    out = sp.check_output(['task', 'context', 'show']).decode('utf-8')
    if out.startswith('No'):
        current_context = 'NONE'
    else:
        temp = out.split()[1]
        current_context = temp.strip("'").upper()

    tmux_cmd('rename-window', 0, current_context)
    send_keys(3, ':e')

if args.mode in ['full', 'main']:
    for window, keys in [(0, 'tc'), (1, 'twc'), (2, 'kc')]:
        send_keys(window, keys)

if args.switch:
    tmux_cmd('select-window', 0)
