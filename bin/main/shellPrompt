#!/usr/bin/env python

"""Uses rofi to Prompt for a Shell Command to Run.

Intended to serve as a replacement for XMonad.Prompt.Shell.shellPrompt.

Any command starting with an uppercase letter will be run inside of a new urxvt instance. Any
command starting with '@' will also be piped to less.
"""

import subprocess as sp  # noqa: F401
import sys

import gutils

############################################################################################
#  gutils library: https://github.com/bbugyi200/scripts/tree/master/modules/python/gutils  #
############################################################################################

log = gutils.logging.getEasyLogger(__name__)


def main():
    prompt_cmd = ['prompt', '@'] if args.less else 'prompt'
    ps = sp.Popen(prompt_cmd, stdout=sp.PIPE)
    cmd = ps.communicate()[0].decode().strip()

    if cmd == '':
        sys.exit(1)

    cmd_list = shell_cmd(cmd)
    sp.Popen(cmd_list, stdout=sp.DEVNULL, stderr=sp.STDOUT)


def shell_cmd(cmd):
    """ Returns Shell Command List """
    cmd_list = []

    if cmd[0] == '@' or args.less or cmd[0].isupper():
        log.debug('Using urxvt command list.')
        cmd_list.extend(['urxvt', '-name', 'big-floater', '-e'])
        cmd = cmd[0].lower() + cmd[1:]
        if cmd[0] == '@' or args.less:
            log.debug('Piping output of "{}" to less.'.format(cmd))
            cmd = cmd[1:] if cmd[0] == '@' else cmd
            cmd = '{}{}'.format(cmd, ' | less')
    else:
        log.debug('Will run "{}" in the background.'.format(cmd))

    cmd_list.extend(['zsh', '-i', '-c', cmd])
    log.debug('Shell Command List: {}'.format(cmd_list))

    return cmd_list


if __name__ == "__main__":
    parser = gutils.ArgumentParser()
    parser.add_argument('-L', dest='less', action='store_true',
                        help='Pipe output of command to `less`.')
    args = parser.parse_args()

    with gutils.logging.context(log, debug=args.debug, verbose=args.verbose):
        main()
