#!/usr/bin/env python

"""Displays root directory of tmux window (based on tmuxinator config)"""

import subprocess as sp  # noqa: F401

import yaml

import gutils

#######################################################################################
#  gutils library: https://github.com/bbugyi200/scripts/tree/master/pymodules/gutils  #
#######################################################################################

log = gutils.logging.getEasyLogger(__name__)


def main():
    all_windows = get_all_windows(args.session_name)

    try:
        _window_dict = all_windows[args.window_index]
        window_name = next(iter(_window_dict))
        window_dict = _window_dict[window_name]
    except IndexError:
        window_dict = dict()

    rootdir = get_rootdir(args.session_name, window_dict)
    print(rootdir, end='')


def get_all_windows(session_name):
    """Returns dictionary of all windows for the given @session_name."""
    mux_yaml_path = '/home/bryan/.config/tmuxinator/{}.yml'.format(session_name)
    with open(mux_yaml_path) as f:
        raw_dict = yaml.safe_load(f)
    return raw_dict['windows']


def get_rootdir(session_name, window_dict):
    """Returns the final root directory path."""
    if 'root' in window_dict:
        rootdir = window_dict['root']
        return rootdir.replace('~', '/home/bryan')
    else:
        out = sp.check_output(['tmdir', '--get', session_name])
        return out.decode().strip()


if __name__ == "__main__":
    parser = gutils.ArgumentParser()
    parser.add_argument('session_name', help='Name of tmux session.')
    parser.add_argument('window_index', type=int, help='Index of the tmux window.')
    args = parser.parse_args()

    with gutils.logging.context(log, debug=args.debug, verbose=args.verbose):
        main()
