#!/bin/bash

#################################################
#  Zathura Utility Script for better Navigation #
#################################################

# ---------- Functions ----------
function switch_directions() {
    touch "$1"
    [ -f "$2" ] && rm "$2"
}

function kill_directions() {
    [ -f "$1" ] && rm "$1"
    [ -f "$2" ] && rm "$2"
}

# ---------- GLOBAL VARIABLES ----------
USAGE="usage: $(basename "$0") -b BOOKMARK | -D DIRECTION | -h | -T ZOOM_IN_KEYS ZOOM_OUT_KEYS | -Z ZOOM KEYS"
DOCUMENT_TITLE="$(ztitle)"

if [[ -n "$XDG_DATA_HOME" ]]; then
    _xdg_data_home="$XDG_DATA_HOME"
else
    _xdg_data_home="$HOME"/.local/share
fi

D="$_xdg_data_home"/"$(basename "$0")"/documents/"$DOCUMENT_TITLE"
[ -d "$D" ] || mkdir -p "$D"

PAGE_FIT_MARKER="$D"/page-fit
DUAL_PAGE_MARKER="$D"/dual-page
LAST_BMARK_MARKER="$D"/last
UP_MARKER="$D"/up
DOWN_MARKER="$D"/down

# ---------- Command-line Arguments ----------
eval set -- "$(getopt -o "b:,d,D:,h,Z:" -l "blist:,debug,direction:,help,zoom:" -- "$@")"

while [[ -n "$1" ]]; do
    case $1 in
        -b|--blist )
            shift
            BMARK="$1"
            ;;
       -d|--debug )
           PS4='$LINENO: '
           set -x
           ;;
       -D|--direction )
           shift
           DIRECTION="$1"
           ;;
       -h|--help )
           echo "$USAGE"
           exit 0
           ;;
       -Z|--zoom )
           shift
           ZOOM="$1"
           ;;
       -- )
           shift
           break
           ;;
    esac
    shift
done

if [[ -z "$DIRECTION" ]] && [[ -z "$ZOOM" ]] && [[ -z "$BMARK" ]]; then
    echo "$USAGE"
    exit 2
fi

# ---------- Main ----------
if [[ -n "$BMARK" ]]; then
    if [[ "$BMARK" == "LAST" ]]; then
        if [ -f "$LAST_BMARK_MARKER" ]; then
            KEYS="mb'a"
            rm "$LAST_BMARK_MARKER"
        else
            KEYS="ma'b"
            touch "$LAST_BMARK_MARKER"
        fi
    else
        KEYS="mag${BMARK}H"
        touch "$LAST_BMARK_MARKER"
    fi
elif [[ -n "$DIRECTION" ]]; then
    case "$DIRECTION" in
        up )
            OTHER_DIRECTION=down
            KEYS=KL
            SCROLL_KEY=H
            ;;
        down )
            OTHER_DIRECTION=up
            KEYS=JH
            SCROLL_KEY=L
            ;;
        * )
            echo "DIRECTION must be one of the following: [up, down]." | tee >(logger -t "$(basename "$0")")
            exit 1
            ;;
    esac

    DIRECTION_MARKER="$D"/"$DIRECTION"
    OTHER_DIRECTION_MARKER="$D"/"$OTHER_DIRECTION"


    if [[ -f "$PAGE_FIT_MARKER" ]]; then
        kill_directions "$DIRECTION_MARKER" "$OTHER_DIRECTION_MARKER"
    elif [[ -f "$DIRECTION_MARKER" ]]; then
        switch_directions "$OTHER_DIRECTION_MARKER" "$DIRECTION_MARKER"
    else
        KEYS="$SCROLL_KEY"
        switch_directions "$DIRECTION_MARKER" "$OTHER_DIRECTION_MARKER"
    fi
elif [[ -n "$ZOOM" ]]; then
    KEYS="$1"; shift

    case "$ZOOM" in
        "in" )
            if [ -f "$DUAL_PAGE_MARKER" ]; then
                [ -f "$DUAL_PAGE_MARKER" ] && rm "$DUAL_PAGE_MARKER"
                rm "$PAGE_FIT_MARKER"
            else
                echo "Zathura is NOT currently using dual page view." | tee >(logger -t "$(basename "$0")")
                exit 1
            fi
            ;;
        "out" )
            if [[ "$KEYS" = *"d"* ]]; then
                touch "$DUAL_PAGE_MARKER"
            fi

            touch "$PAGE_FIT_MARKER"
            ;;
        "toggle" )
            if [[ -z "$1" ]]; then
                echo "$USAGE"
                exit 2
            fi

            if [[ -f "$PAGE_FIT_MARKER" ]]; then
                rm "$PAGE_FIT_MARKER"
            else
                KEYS="$1"; shift
                touch "$PAGE_FIT_MARKER"
            fi
            ;;
        * )
            echo "ZOOM must be one of the following: [in, out, toggle]" | tee >(logger -t "$(basename "$0")")
            exit 1
    esac

    if [[ "$KEYS" = *"H"* ]]; then
        switch_directions "$UP_MARKER" "$DOWN_MARKER"
    elif [[ "$KEYS" = *"L"* ]]; then
        switch_directions "$DOWN_MARKER" "$UP_MARKER"
    else
        kill_directions "$UP_MARKER" "$DOWN_MARKER"
    fi
fi

if [[ -z "$DOCUMENT_TITLE" ]]; then
    echo "No Zathura Document is Focused" | tee >(logger -t "$(basename "$0")")
    exit 1
fi

xtype "$KEYS"
