#!/bin/bash

#################################################
#  Zathura Utility Script for better Navigation #
#################################################

source /home/bryan/Dropbox/scripts/modules/bash/gutils.sh

# ---------- Functions ----------
function switch_directions() {
    touch "$1"
    [ -f "$2" ] && rm "$2"
}

function kill_directions() {
    [ -f "$1" ] && rm "$1"
    [ -f "$2" ] && rm "$2"
}

# ---------- GLOBAL VARIABLES ----------
USAGE="usage: $(basename "$0") [-d] [-h] [-b BOOKMARK | -D DIRECTION | -z {+ ZOOM_IN_KEYS | - ZOOM_OUT_KEYS | T ZOOM_IN_KEYS ZOOM_OUT_KEYS}]"
DOCUMENT_TITLE="$(ztitle)"
DELAY=1

if [[ -n "$XDG_DATA_HOME" ]]; then
    _xdg_data_home="$XDG_DATA_HOME"
else
    _xdg_data_home="$HOME"/.local/share
fi

D="$_xdg_data_home"/"$(basename "$0")"/documents/"$DOCUMENT_TITLE"

PAGE_FIT_MARKER="$D"/page-fit
DUAL_PAGE_MARKER="$D"/dual-page
LAST_BMARK_MARKER="$D"/last
UP_MARKER="$D"/up
DOWN_MARKER="$D"/down

# ---------- Command-line Arguments ----------
eval set -- "$(getopt -o "b:,d,D:,h,q,z:" -l "blist:,debug,direction:,help,quiet,zoom:" -- "$@")"

while [[ -n "$1" ]]; do
    case $1 in
        -b|--blist )
            shift
            BMARK="$1"
            ;;
       -d|--debug )
           PS4='$LINENO: '
           set -x

           exec > >(tee /var/tmp/"$(basename "$0")".log)
           exec 2>&1
           ;;
       -D|--direction )
           shift
           DIRECTION="$1"
           ;;
       -h|--help )
           echo "$USAGE"
           exit 0
           ;;
       -q|--quiet )
           ;;
       -z|--zoom )
           shift
           ZOPTION="$1"
           ;;
       -- )
           shift
           break
           ;;
    esac
    shift
done

if [[ -z "$DIRECTION" ]] && [[ -z "$ZOPTION" ]] && [[ -z "$BMARK" ]]; then
    die "$USAGE" 2
fi

# ---------- Main ----------
if ! [[ -d "$D" ]]; then
    mkdir -p "$D"

    # new document should be treated as if it is zoomed out
    touch "$D" "$PAGE_FIT_MARKER"
fi

if [[ -n "$BMARK" ]]; then
    if [[ "$BMARK" == "LAST" ]]; then
        if [ -f "$LAST_BMARK_MARKER" ]; then
            KEYS="mb'a"
            rm "$LAST_BMARK_MARKER"
        else
            KEYS="ma'b"
            touch "$LAST_BMARK_MARKER"
        fi
    else
        DELAY=10  # prevents :blist errors in zathura
        KEYS="mag${BMARK}H"
        touch "$LAST_BMARK_MARKER"
    fi
elif [[ -n "$DIRECTION" ]]; then
    case "$DIRECTION" in
        up )
            OTHER_DIRECTION=down
            NEXT_PAGE_KEY=K
            SCROLL_KEY=L
            OTHER_SCROLL_KEY=H
            ;;
        down )
            OTHER_DIRECTION=up
            NEXT_PAGE_KEY=J
            SCROLL_KEY=H
            OTHER_SCROLL_KEY=L
            ;;
        * )
            die "DIRECTION must be one of the following: [up, down]."
            ;;
    esac

    DIRECTION_MARKER="$D"/"$DIRECTION"
    OTHER_DIRECTION_MARKER="$D"/"$OTHER_DIRECTION"

    if [[ -f "$PAGE_FIT_MARKER" ]]; then
        KEYS="${NEXT_PAGE_KEY}"
        kill_directions "$DIRECTION_MARKER" "$OTHER_DIRECTION_MARKER"
    elif [[ -f "$DIRECTION_MARKER" ]]; then
        KEYS="${NEXT_PAGE_KEY}${SCROLL_KEY}"
        switch_directions "$OTHER_DIRECTION_MARKER" "$DIRECTION_MARKER"
    else
        KEYS="${OTHER_SCROLL_KEY}"
        switch_directions "$DIRECTION_MARKER" "$OTHER_DIRECTION_MARKER"
    fi
elif [[ -n "$ZOPTION" ]]; then
    if [[ -z "$1" ]]; then
        die "$USAGE" 2
    fi

    KEYS="$1"; shift

    case "$ZOPTION" in
        + )
            if [[ "$KEYS" = *"d"* ]]; then
                if [ -f "$DUAL_PAGE_MARKER" ]; then
                    rm "$DUAL_PAGE_MARKER"
                else
                    die "Zathura is NOT currently using dual page view."
                fi
            fi

            rm "$PAGE_FIT_MARKER"
            ;;
        - )
            if [[ "$KEYS" = *"d"* ]]; then
                touch "$DUAL_PAGE_MARKER"
            fi

            touch "$PAGE_FIT_MARKER"
            ;;
        T )
            if [[ -z "$1" ]]; then
                die "$USAGE" 2
            fi

            if [[ -f "$PAGE_FIT_MARKER" ]]; then
                rm "$PAGE_FIT_MARKER"
            else
                KEYS="$1"; shift
                touch "$PAGE_FIT_MARKER"
            fi
            ;;
        * )
            die "ZOPTION must be one of the following: [+, -, T]"
    esac

    if [[ "$KEYS" = *"H"* ]]; then
        switch_directions "$UP_MARKER" "$DOWN_MARKER"
    elif [[ "$KEYS" = *"L"* ]]; then
        switch_directions "$DOWN_MARKER" "$UP_MARKER"
    else
        kill_directions "$UP_MARKER" "$DOWN_MARKER"
    fi
fi

xtype -D "$DELAY" "$KEYS"
