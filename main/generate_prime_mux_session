#!/usr/bin/python3

"""Generates a Prime (secondary) Tmuxinator Session Configuration File using Jinja2"""

import datetime as dt  # noqa: F401
import os  # noqa: F401
import subprocess as sp  # noqa: F401
import sys  # noqa: F401

import jinja2

import gutils

############################################################################################
#  gutils library: https://github.com/bbugyi200/pylibs/tree/master/gutils                  #
############################################################################################

log = gutils.logging.getEasyLogger(__name__)
scriptname = os.path.basename(os.path.realpath(__file__))


def main(args):
    fp_template = '/home/bryan/Dropbox/var/templates/template.tmuxinator'
    dp_mux_config = '/home/bryan/.config/tmuxinator'

    with open(fp_template, 'r') as f:
        contents = f.read()

    prime_session_name = '{}`'.format(args.session_name)
    fp_mux_config = '{}/{}.yml'.format(dp_mux_config, args.session_name)

    matched = False
    options_list = []
    for line in open(fp_mux_config, 'r'):
        if 'name:' in line:
            matched = True
            continue

        if matched:
            options_list.append(line)

    T = jinja2.Template(contents)
    new_contents = T.render(session_name=prime_session_name,
                            options=''.join(options_list))

    fp_prime_config = '{}/{}.yml'.format(dp_mux_config, prime_session_name)
    with open(fp_prime_config, 'w') as f:
        f.write(new_contents)


if __name__ == "__main__":
    parser = gutils.ArgumentParser()
    parser.add_argument('session_name', help='Tmuxinator session name to emulate.')
    args = parser.parse_args()

    with gutils.logging.context(log, debug=args.debug, verbose=args.verbose):
        main(args)
