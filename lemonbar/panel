#! /bin/sh

if xdo id -a "$PANEL_WM_NAME" > /dev/null ; then
    printf "%s\n" "The panel is already running." >&2
    exit 1
fi

trap 'trap - TERM; kill 0' INT TERM QUIT EXIT

[ -e "$PANEL_FIFO" ] && rm "$PANEL_FIFO"
mkfifo "$PANEL_FIFO"

. panel_config


bspc config top_padding $PANEL_HEIGHT
bspc subscribe report > "$PANEL_FIFO" &
clock -sf 'S%A, %B %d %Y   %I:%M%p' > "$PANEL_FIFO" &

cnt_dbox=${upd_dbox}
cnt_net=${upd_net}
cnt_vol=${upd_vol}
cnt_mail=${upd_mail}
cnt_upd=${upd_upd}
if [[ "$(hostname)" == "athena" ]]; then
    cnt_pia=${upd_pia}
    cnt_batt=-3456000
    net_dev="enp2s0"
    FONT_SIZE="12"
elif [[ "$(hostname)" == "aphrodite" ]]; then
    cnt_pia=-3456000
    cnt_batt=${upd_batt}
    net_dev="wlo1"
    FONT_SIZE="10"
fi

while true; do
    # OS Update Checker
    if [ $((cnt_upd++)) -ge ${upd_upd} ]; then
        python ~/Dropbox/scripts/python/UpdtCheck.py
        if [ $? -ne 0 ]; then
            echo -e "U\uf0aa  " > "$PANEL_FIFO"
        else
            echo "U" > "$PANEL_FIFO"
        fi
        cnt_upd=0
    fi

    # New Mail
    if [ $((cnt_mail++)) -ge ${upd_mail} ]; then
        check_mail -q
        if [ $? -ne 0 ]; then
            echo -e "M%{F$WHITE}\uf003  " > "$PANEL_FIFO"
        else
            echo "M" > "$PANEL_FIFO"
        fi
        cnt_mail=0
    fi

    # Battery
    if [ $((cnt_batt++)) -ge ${upd_batt} ]; then
        BP=$(acpi --battery | cut -d, -f2)
        if [ ${BP%?} -ge 70 ]; then
            COLOR="$GREEN"
            ICON_BATT="\uf240"
        elif [ ${BP%?} -ge 35 ]; then
            COLOR="$YELLOW"
            ICON_BATT="\uf242"
        else
            COLOR="$RED"
            ICON_BATT="\uf243"
        fi

        if [[ "$(acpi --battery)" != *"Discharging"* ]]; then
            BOLT="\uf0e7 "
        else
            BOLT=""
        fi
        echo -e "B%{F$COLOR}$BOLT$ICON_BATT$BP  " > "$PANEL_FIFO"
        cnt_batt=0
    fi

    # Volume
    if [[ $((cnt_vol++)) -ge $(upd_vol) ]]; then
        VOL=$(amixer get Master | sed -n 's/^.*\[\([0-9]\+\)%.*$/\1/p'| uniq)
        if [[ $VOL -eq 0 ]]; then
            echo -e "V\uf026  " > "$PANEL_FIFO"
        elif [[ $VOL -ge 50 ]]; then
            echo -e "V\uf028  " > "$PANEL_FIFO"
        else
            echo -e "V\uf027  " > "$PANEL_FIFO"
        fi
        cnt_vol=0
    fi

    # Dropbox
    if [ $((cnt_dbox++)) -ge ${upd_dbox} ]; then
        if [[ -n "$(pgrep dropbox)" ]]; then
            echo -e "D%{F$BLUE}\uf16b  " > "$PANEL_FIFO"
        else
            echo "D" > "$PANEL_FIFO"
        fi
        cnt_dbox=0
    fi

    # PIA
    if [ $((cnt_pia++)) -ge ${upd_pia} ]; then
        if [[ -n "$(pgrep openvpn)" ]]; then
            echo -e "P\uf17b  " > "$PANEL_FIFO"
        else
            echo "P" > "$PANEL_FIFO"
        fi
        cnt_pia=0
    fi

    # Network Connection
    if [ $((cnt_net++)) -ge ${upd_net} ]; then
        if [[ "$(ip link show $net_dev)" == *"UP"* ]]; then
            ping -q -w 1 -c 1 google.com > /dev/null
            if [ $? -eq 0 ]; then
                echo -e "X\uf118  " > "$PANEL_FIFO"
            else
                echo -e "X\uf11a  " > "$PANEL_FIFO"
            fi
        else
            echo -e "X\uf119  " > "$PANEL_FIFO"
        fi
        cnt_net=0
    fi

    sleep 1
done &

# "$PANEL_FONT"
panel_bar < "$PANEL_FIFO" | lemonbar -a 32 -n "$PANEL_WM_NAME" -g x$PANEL_HEIGHT -f "Inconsolata-$FONT_SIZE:Bold" -f "Font Awesome-$FONT_SIZE" -f "Font Awesome-12" -F "$COLOR_DEFAULT_FG" -B "$COLOR_DEFAULT_BG" | sh &

wid=$(xdo id -a "$PANEL_WM_NAME")
tries_left=20
while [ -z "$wid" -a "$tries_left" -gt 0 ] ; do
    sleep 0.05
    wid=$(xdo id -a "$PANEL_WM_NAME")
    tries_left=$((tries_left - 1))
done
[ -n "$wid" ] && xdo above -t "$(xdo id -N Bspwm -n root | sort | head -n 1)" "$wid"

wait
