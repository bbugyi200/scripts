#!/bin/bash

###################################################################################################
#  Wrapper for Python line_profile (https://github.com/rkern/line_profiler)                       #
#                                                                                                 #
# 1) If the Python script does not exist in current directory, search the filesystem for it.      #
# 2) Make copy of Python script (use this copy for the remaining steps).                          #
# 3) Preface every function in Python script with @profile decorator.                             #
# 4) Profile Python script with `kernprof` (save profiling statistics to a file).                 #
# 5) Cleanup all temp files.                                                                      #
# 6) Open profiling stats file in vim.                                                            #
#                                                                                                 #
# Once the profiling stats file is open, you may use the ']' and '[' keys to navigate to the      #
# next and previous functions, respectively.                                                      #
###################################################################################################

# ---------- Modules ----------
source gutils.sh

# ---------- Global Variables ----------
# shellcheck disable=SC2034
SCRIPTNAME="$(basename "$0")"
USAGE="usage: $(basename "$0") PYTHON_SCRIPT [OPTIONS]"
XDG_RUNTIME=/tmp/"${SCRIPTNAME}"

[ -d "${XDG_RUNTIME}" ] || mkdir "${XDG_RUNTIME}"

# ---------- Main ----------
if [[ -z "$1" ]]; then
    die "${USAGE}" 2
fi

pyscript="$1"
if ! [[ -f "${pyscript}" ]]; then
    old_pyscript="${pyscript}"
    pyscript="$(command -v "${pyscript}")"
    [[ -f "${pyscript}" ]] || die "Unable to find the Python script ${old_pyscript}."
fi

pyscript_filename="$(basename "${pyscript}")"
pstats_file="${XDG_RUNTIME}"/"${pyscript_filename}".stats
tmp_script="${XDG_RUNTIME}"/"${pyscript_filename}"

cp -f "${pyscript}" "${tmp_script}"
sed -E -i '/^def .+\(/i@profile' "${tmp_script}"

kernprof -v -l "${tmp_script}" "${@:2}" > "${pstats_file}"

rm "${pyscript_filename}".lprof
 
vim +1 -c 'nnoremap <nowait> ] /@profile<CR>' -c 'nnoremap <nowait> [ ?@profile<CR>' "${pstats_file}"
