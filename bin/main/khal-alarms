#!/bin/bash

# ---------- GLOBALS
PID_FILE=/tmp/khal-alarms.pid
FIFO=/tmp/calevent-fifo
N=1

[[ -p $FIFO ]] || mkfifo $FIFO

# ---------- ARGUEMENT PARSING
eval set -- $(getopt -o "d" -l "debug" -- "$@")

while [[ -n "$1" ]]; do
	case $1 in
        -d|--debug )
            PS4='$LINENO: '
            set -x;;
	esac
	shift
done

# ---------- FUNCTIONS
print_event() {
    printf "\"$title\" at $starttime\n" > "$FIFO"
}

get_start_time() { 
    echo $(khal list --notstarted --day-format '' --format '{start-time}' now $(date --date='2days' +%Y-%m-%d) | head -n "$N" | tail -n 1)
}

get_title() { 
    echo $(khal list --notstarted --day-format '' --format '{title}' now $(date --date='2days' +%Y-%m-%d) | head -n "$N" | tail -n 1)
}

# ---------- PROCESS MANAGEMENT
if [[ -f $PID_FILE ]]; then
    if kill -0 "$(cat $PID_FILE)" &> /dev/null; then
        cat $PID_FILE | xargs kill
    fi
fi

echo $$ > $PID_FILE

# ---------- MAIN
while true; do
    while [[ -z "$(get_start_time)" ]]; do
        if [[ "$(get_title)" == "$last_title" ]]; then
            break 2
        fi

        last_title="$(get_title)"
        N="$((N + 1))"
    done

    starttime="$(get_start_time)"
    title="$(get_title)"

    [[ "$title" != "No"* ]] || break

    print_event
    alarm "$starttime" "$title"

    [[ "$?" -eq 0 ]] || break
done 

alarm --stop
printf "\n" > "$FIFO"
