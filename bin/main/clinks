#!/bin/bash

##########################
#  Function Definitions  #
##########################
function bin_stow() {
    D="$1"; shift
    stow --dir=/home/bryan/Dropbox/scripts/bin \
        --target=/usr/local/bin \
        --ignore=".*\.sh" \
        --ignore=".*\.py" \
        "${FLAG}" "${D}"
}

##################################
#  parse command-line arguments  #
##################################
if [[ -z "$1" ]]; then
    FLAG=-R
else
    FLAG=$1
fi

#######################
#  mkdirs for clinks  #
#######################
if [[ "$FLAG" != "-D" ]]; then
    DATA_DIRS=("applications" "okular" "qutebrowser")
    for D in "${DATA_DIRS[@]}" ; do
        mkdir -p /home/bryan/.local/share/"$D" &> /dev/null
        sudo mkdir -p /root/.local/share/"$D" &> /dev/null
    done

    # Directories inside /home/<user> that should be created before stowing configs
    HOME_DIRS=(".config" ".gnupg" ".matlab" ".ssh" ".weechat" ".xmonad")
    for D in "${HOME_DIRS[@]}"; do
        mkdir /home/bryan/"$D" &> /dev/null
        sudo mkdir /root/"$D" &> /dev/null
    done

    # Directories inside /usr/local that should be created before stowing configs
    USR_DIRS=("python" "src" "include" "lib")
    for D in "${USR_DIRS[@]}"; do
        sudo mkdir /usr/local/"$D" &> /dev/null
    done
fi

############################
#  ensure running as root  #
############################
if [ "$(id -u)" != "0" ]; then
  exec sudo "$0" "$@"
fi

##########################################
#  ROOT_DUPLICATE_DIRS Pre-stow Actions  #
##########################################
# The directories listed in ROOT_DUPLICATE_DIRS will be removed from the /root folder before
# running stow commands and then a recursive copy is made from /home/bryan/<DIR> to /root/<DIR>
# after the stow commands have concluded.
ROOT_DUPLICATE_DIRS=(".ssh")
for D in "${ROOT_DUPLICATE_DIRS[@]}"; do
    rm -rf /root/"$D"
done

##############################
#  use 'stow' to make links  #
##############################
if [[ $(hostname) == "athena" ]]; then
	stow --dir=/home/bryan/Dropbox/scripts/bin --target=/etc "$FLAG" cron.jobs
fi

##### SCRIPTS
bin_stow awk
bin_stow gentoo
bin_stow GTD
bin_stow main
bin_stow ProtectMyLaptop
bin_stow tmux
bin_stow xmonad
bin_stow zathura

##### MODULES / LIBRARIES / HEADERS
pylib_directory="$(find -L /usr/lib -maxdepth 1 -type d -name "python3.*")"
stow --dir=/home/bryan/Dropbox/scripts/lib --target="${pylib_directory}" "$FLAG" python
stow --dir=/home/bryan/Dropbox/scripts/lib --target=/usr/lib "$FLAG" bash
stow --dir=/home/bryan/Dropbox/scripts/C --target=/usr/local/src "$FLAG" src
stow --dir=/home/bryan/Dropbox/scripts/C --target=/usr/local/include "$FLAG" include
stow --dir=/home/bryan/Dropbox/scripts/C --target=/usr/local/lib "$FLAG" lib

##### DOTFILES
stow --dir=/home/bryan/Dropbox/dotfiles --target=/home/bryan "$FLAG" home
stow --dir=/home/bryan/Dropbox/dotfiles --target=/root "$FLAG" home
stow --dir=/home/bryan/Dropbox/dotfiles --target=/usr --no-folding "$FLAG" usr

###########################################
#  ROOT_DUPLICATE_DIRS Post-stow Actions  #
###########################################
if [[ "$FLAG" != "-D" ]] && [[ -d /home/bryan/"$D" ]]; then
    for D in "${ROOT_DUPLICATE_DIRS[@]}"; do
        rm -rf /root/"$D"
        mkdir -p /root/"$D"
        cp -rf /home/bryan/"$D"/* /root/"$D"
    done
fi
