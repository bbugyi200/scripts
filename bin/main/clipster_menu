#!/usr/bin/env python

"""
Takes the history file that clipster uses to store the clipboard history
and sends it to rofi. The user's choice is then loaded to the clipboard.
"""

import argparse
import json
import subprocess as sp

history_file = '/home/bryan/Dropbox/var/clipster.history'
MAX_LINE = 64

parser = argparse.ArgumentParser(description=__doc__)
parser.parse_args()


def shorten(clip):
    lines = clip.count('\n')
    if lines > 0:
        first = clip[:clip.find('\n')]
        if len(first) > MAX_LINE:
            first = '{}...'.format(clip[:MAX_LINE])

        clip = '{} ({} lines)'.format(first, lines)
    else:
        if len(clip) > MAX_LINE:
            clip = '{}...'.format(clip[:MAX_LINE])

    clip = clip.replace('\\', '\\\\').replace('%', '%%')
    return clip


clips = json.load(open(history_file))['CLIPBOARD']
clips.reverse()
short_clips = list(map(shorten, clips))

ps = sp.Popen(['printf', '{}'.format('\n'.join(short_clips))], stdout=sp.PIPE)
out = sp.check_output(['rofi', '-m', '0', '-p', 'clip', '-dmenu'], stdin=ps.stdout)
choice = out.decode('utf-8').replace('\\', '\\\\').replace('%%', '%')[:-1]  # [:-1] gets rid of newline that rofi adds
new_clip = clips[short_clips.index(choice)].encode('utf-8')

ps = sp.Popen(['xclip', '-sel', 'clipboard'], stdin=sp.PIPE)
ps.communicate(input=new_clip)
