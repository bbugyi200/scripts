#!/usr/bin/python3

"""Zathura Search

1. Prompts the user for a search term.
2. If the --new option was used:
  (a) Find the currently opened book.
  (b) Open up another instance of that book in a new zathura window.
3. Saves current location to '.' bookmark.
4. Jumps to the start of the book (the 'S' zathura mark needs to be defined for this part).
5. Searchs zathura using the search term provided by the user in step 1.
"""

import re
import subprocess as sp  # noqa: F401
import sys  # noqa: F401
import time

import gutils

############################################################################################
#  gutils library: https://github.com/bbugyi200/pylibs/tree/master/gutils                  #
############################################################################################

log = gutils.logging.getEasyLogger(__name__)


def main():
    if args.new_workspace:
        gutils.xkey('alt+super+shift+z')
        time.sleep(0.1)

    ps = sp.Popen(['wmctrl', '-lx'], stdout=sp.PIPE)
    out = ps.communicate()[0].decode().strip()

    zath_wmctrl_report = None
    for line in out.split('\n'):
        if 'zathura' in line:
            zath_wmctrl_report = line
            break

    if zath_wmctrl_report is None:
        msg = 'Zathura instance not found.'
        log.error('{}\nwmctrl output: {}'.format(msg, out))
        raise RuntimeError(msg)
    else:
        log.debug('Zath wmctrl Report: "{}"'.format(zath_wmctrl_report))

    zath_wmctrl_list = re.split(r'\s+', zath_wmctrl_report)
    log.debug('Zath wmctrl List: {}'.format(zath_wmctrl_list))

    full_book_path = ' '.join(zath_wmctrl_list[4:-1])
    log.debug('Full Book Path: "{}"'.format(full_book_path))

    if args.new_instance:
        sp.Popen(['zathura', full_book_path])
        time.sleep(0.3)

    if args.search:
        gutils.xtype('b0', delay=50)
        if args.search_term is None:
            ps = sp.Popen(['prompt', 'Search Term'], stdout=sp.PIPE)
            search_term = ps.communicate()[0].decode().strip()
        else:
            search_term = args.search_term

        log.debug('Search Term: {}'.format(search_term))
        if search_term == '':
            raise RuntimeError('No search term provided.')

        gutils.xtype('gS/{}'.format(search_term), delay=50)
        gutils.xkey('KP_Enter')


if __name__ == "__main__":
    parser = gutils.ArgumentParser()
    parser.add_argument('search_term', nargs='?', default=None,
            help='Zathura search term (optional).')
    parser.add_argument('--new-instance', dest='new_instance', action='store_true',
            help='Use a new Zathura instance.')
    parser.add_argument('--no-search', dest='search', action='store_false',
            help='Do not run search over document.')
    parser.add_argument('--new-workspace', dest='new_workspace', action='store_true',
            help='Simulate xmonad key-bind that will rerun this program in a new workspace.')
    args = parser.parse_args()

    with gutils.logging.context(log, debug=args.debug):
        main()
