#!/bin/bash

. panel_config

FILE=/tmp/alarm.pid


time_left() {
	echo $(($stop_time - $(date --date="now" +%s)))
}


# ---------- Command Line Arguments ----------
eval set -- $(getopt -o "s" -l "stop" -- "$@")

while [[ -n "$1" ]]; do
	case $1 in
		'-s' | '--stop' )
			action="stop";;
		'--' )
			shift
			break;;
	esac
	shift
done

# ---------- Action: stop ----------
if [[ "$action" == "stop" ]]; then
	cat $FILE | xargs kill
	echo "A" > "$PANEL_FIFO"
	exit 0
fi

# ---------- Exit if FILE Exists ----------
if [[ -f $FILE ]]; then
	echo "An Alarm is Already Running!"
	exit 1
else
	echo $$ > $FILE
fi


trap 'rm $FILE' EXIT


# ---------- Set Alarm Time ----------
if [[ -z "$1" ]]; then
	alrm_time="$(echo | dmenu -m 1 -p "Alarm:")"
else
	alrm_time=$1
fi


if [[ $alrm_time == *"s" ]]; then
	alrm_time=${alrm_time%s}
	stop_time=$(date --date="$alrm_time seconds" +%s)
elif [[ $alrm_time == *":"* ]]; then
	stop_time=$(date --date="$alrm_time" +%s)
	if [[ $(date +%s) -ge $stop_time ]]; then
		stop_time=$(date --date="$alrm_time tomorrow" +%s)
	fi
else
	stop_time=$(date --date="$alrm_time minutes" +%s)
fi


# ---------- Main Output ----------
iclock="\uf017"
while true; do
	TL=$(time_left)
	if [[ $TL -ge 3600 ]]; then
		printf "A%%{F$GREY}  %d:%02d:%02d $iclock  \n" $((TL/3600)) $((TL%3600/60)) $((TL%3600%60))
	else
		printf "A%%{F$GREY}  %d:%02d $iclock  \n" $((TL/60)) $((TL%60))
	fi
	sleep 1

	if [[ $TL -le 0 ]]; then
		break;
	fi
done > "$PANEL_FIFO"


# ---------- Timer Finished ----------
for i in {0..101} ; do
	if [[ $((i % 2)) == 0 ]]; then
		COLOR=$GREY
	else
		COLOR=$RED
	fi
	printf "A%%{F$COLOR}  TIMER IS DONE $iclock   \n"
	sleep 0.5
done > "$PANEL_FIFO"

printf "A\n" > "$PANEL_FIFO"
