#!/usr/bin/env python

""" Completes the Current Task and Starts the Next Most Urgent Task """

import argparse
import os
import subprocess as sp

task_choices = []
custom_columns = ['id', 'start.age', 'entry.age', 'depends', 'priority', 'project',
        'tags', 'recur', 'scheduled.countdown', 'due.relative','until.remaining',
        'description.count', 'urgency']
ready_tasks_cmd = "task rc.defaultwidth=500 rc.report.next.columns:{} "\
        "rc.verbose=nothing rc._forcecolor=no next +READY".format(','.join(custom_columns))

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description=__doc__)
    parser.parse_args()

    sp.call(['task', 'start.any:', 'done'])
    ready_tasks = os.popen(ready_tasks_cmd)

    first = ready_tasks.readline()
    first_urg = float(first.split()[-1])

    temp = first
    temp_urg = first_urg
    while temp_urg == first_urg:
        task_choices.append(temp)
        temp = ready_tasks.readline()
        temp_urg = float(temp.split()[-1])

    if len(task_choices) > 1:
        cmd_fmt = ready_tasks_cmd + ' | head -n {0:d} | rofi -p "Next Task" -dmenu'
        next_task = os.popen(cmd_fmt.format(len(task_choices))).read()
    else:
        next_task = task_choices[0]

    next_task_id = next_task.split()[0]
    sp.call(['task', 'start', next_task_id])
    sp.call(['task_refresh'])
